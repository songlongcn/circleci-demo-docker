version: 2.1
orbs:
  neuvector: neuvector/neuvector-orb@1.0.0
  aws-eks: circleci/aws-eks@0.2.7
  kube-orb: circleci/kubernetes@0.11.0
jobs:
  build:
    docker:
      # using custom image, see .circleci/images/primary/Dockerfile
      - image: circleci/cci-demo-docker-primary:0.0.2
      - image: postgres:9.4.1
        environment:
          POSTGRES_USER: ubuntu
          POSTGRES_DB: contacts
    working_directory: /go/src/github.com/circleci/cci-demo-docker

    environment:
      TEST_RESULTS: /tmp/test-results

    steps:
      - checkout

      - run:
          name: Waiting for Postgres to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z localhost 5432 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for Postgress && exit 1

      - run: mkdir -p $TEST_RESULTS

      - run:
          name: Run unit tests
          environment:
            DATABASE_URL: "postgres://ubuntu@localhost:5432/contacts?sslmode=disable"
            DB_MIGRATIONS: /go/src/github.com/circleci/cci-demo-docker/db/migrations
          command: |
            set -ou pipefail
            trap "go-junit-report <${TEST_RESULTS}/go-test.out > ${TEST_RESULTS}/go-test-report.xml" EXIT
            # Notice this `set -o pipefail`, this will cause script to fail if `make test` fails
            # without this option script will return success regardless of testing result due to pipe after test command
            make test | tee ${TEST_RESULTS}/go-test.out

      - setup_remote_docker
#           docker_layer_caching: true

      # This should go into custom primary image, here's only for the sake of explanation
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
            docker ps

      - run:
          name: Build service
          command: make

      - run:
          name: Build and push Docker image
          command: |
            TAG="${CIRCLE_BUILD_NUM}"
            docker build -t ${CIRCLE_PROJECT_REPONAME}:ci .
#            docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD
#            docker push ${CIRCLE_PROJECT_REPONAME}:ci
#       - neuvector/scan-image:
#           context: myContext
#           registry_url: ''
#           repository: songlongtj/cci-demo-docker
#           tag: $TAG
#           scan_layers: false
#           high_vul_to_fail: 5
#           medium_vul_to_fail: 5
      - run:
          name: Save Docker image
          command: |
            rm -rf /home/circleci/workspace/docker/
            mkdir /home/circleci/workspace/docker/ -p
            docker save -o /home/circleci/workspace/docker/${CIRCLE_PROJECT_REPONAME}-ci.tar ${CIRCLE_PROJECT_REPONAME}:ci
      - persist_to_workspace:
          root: /home/circleci/workspace/
          paths:
            - docker/*
              
      - store_artifacts:
          path: /tmp/test-results
          destination: raw-test-output

      - store_test_results:
          path: /tmp/test-results
          
  local_neuvector:
    docker:
      - image: docker:stable-git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: install nevuector scanner
          command: |
            echo "docker host: $DOCKER_HOST"
            echo "IP: "
            echo "$DOCKER_HOST" | awk -F: '{print $2 $3}'
            
  local_scan:
    docker:
      - image: docker:stable-git

    steps:
      - checkout
#       - neuvector/scan-image
      - setup_remote_docker
      - attach_workspace:
          at: /home/circleci/workspace/
#       # This should go into custom primary image, here's only for the sake of explanation
#       - run:
#           name: Install Docker client
#           command: |
#             set -x
#             VER="17.03.0-ce"
#             curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
#             tar -xz -C /tmp -f /tmp/docker-$VER.tgz
#             mv /tmp/docker/* /usr/bin
      - run:
          name: Load Docker Image layer
          command: |
            docker ps
            docker load -i /home/circleci/workspace/docker/${CIRCLE_PROJECT_REPONAME}-ci.tar
            docker ps
#       - neuvector/scan-image:
#           context: myContext
#           registry_url: 'https://registry.hub.docker.com/'
#           repository: library/alpine
#           tag: 'latest'
#           scan_layers: false
#           high_vul_to_fail: 5
#           medium_vul_to_fail: 5
          
workflows:
  version: 2.1
  build-and-scan-image:
    jobs:
#       - build
      - local_neuvector
#       - local_scan:
#           requires:
#             - build
#       - neuvector/scan-image:
# #           requires:
# #             - build
#           context: myContext
#           registry_url: 'https://registry.hub.docker.com/'
#           repository: library/alpine
# #           repository: songlongtj/cci-demo-docker
#           tag: 'latest'
#           scan_layers: false
#           high_vul_to_fail: 5
#           medium_vul_to_fail: 5
            
          
